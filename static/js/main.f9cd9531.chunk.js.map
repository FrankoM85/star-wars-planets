{"version":3,"sources":["components/resident.jsx","components/residents.jsx","components/table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Resident","residentInfo","useState","resident","setResident","useEffect","fetch","then","response","status","json","TableRow","TableCell","align","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","useStyles","makeStyles","theme","paper","position","maxWidth","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","residentBtn","residents","data","console","log","classes","React","open","setOpen","handleClose","body","TableContainer","component","Paper","Table","className","table","TableHead","onClick","TableBody","map","index","length","type","Modal","minWidth","BasicTable","planets","i","scope","diameter","climate","terrain","surface_water","value","population","thousandSeparator","displayType","Button","variant","color","App","setPlanets","loading","setLoading","page","setPage","a","res","results","fetchPlanets","Container","Dimmer","active","inverted","Loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9cd9531.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst Resident = ({ residentInfo }) => {\r\n  const [resident, setResident] = useState([]); //a resident már object {}\r\n\r\n  useEffect(() => {\r\n    fetch(residentInfo) //residentInfo még url\r\n      .then((response) => {\r\n        if (response.status !== 200) return;\r\n        return response.json();\r\n      })\r\n      .then((json) => setResident(json)); //a responban kapott adat egy resident nevű object-be kerül {}\r\n  }, [residentInfo]);\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell align=\"center\">{resident.name}</TableCell>\r\n      <TableCell align=\"center\">{resident.height}</TableCell>\r\n      <TableCell align=\"center\">{resident.mass}</TableCell>\r\n      <TableCell align=\"center\">{resident.hair_color}</TableCell>\r\n      <TableCell align=\"center\">{resident.skin_color}</TableCell>\r\n      <TableCell align=\"center\">{resident.eye_color}</TableCell>\r\n      <TableCell align=\"center\">{resident.birth_year}</TableCell>\r\n      <TableCell align=\"center\">{resident.gender}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Resident;","import React from 'react';\r\nimport '../App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Resident from './resident';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    maxWidth: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal( {data} ) {\r\n  \r\n  let residentBtn;\r\n  let residents = data.residents;\r\n  console.log(residents) \r\n\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Name</TableCell>\r\n            <TableCell align=\"center\">Height</TableCell>\r\n            <TableCell align=\"center\">Mass</TableCell>\r\n            <TableCell align=\"center\">Hair color</TableCell>\r\n            <TableCell align=\"center\">Skin color</TableCell>\r\n            <TableCell align=\"center\">Eye color</TableCell>\r\n            <TableCell align=\"center\">Birth Year</TableCell>\r\n            <TableCell align=\"center\">Gender</TableCell>\r\n            <button className=\"closeBtn\" onClick={handleClose}>X</button>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n              {residents.map((resident, index) => (\r\n                <Resident key={index} residentInfo={resident} />\r\n              ))}\r\n        </TableBody>\r\n      </Table>\r\n      <button className=\"closeBtn\" onClick={handleClose}>Close</button>\r\n    </TableContainer>\r\n  );\r\n  \r\n  if (residents.length === 0) {\r\n    residentBtn = 'No known residents';\r\n  } else {\r\n    residentBtn = (\r\n      <button type=\"button\" className=\"residentBtn\" onClick={handleOpen}>\r\n      {residents.length} Residents\r\n    </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {residentBtn}\r\n      <Modal\r\n        open={open}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport SimpleModal from './residents';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 300,\r\n  },\r\n});\r\n\r\n\r\nexport default function BasicTable({ data }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Planet Name</TableCell>\r\n            <TableCell align=\"right\">Diameter (km)</TableCell>\r\n            <TableCell align=\"right\">Cliamte</TableCell>\r\n            <TableCell align=\"right\">Terrain</TableCell>\r\n            <TableCell align=\"right\">Surface Water (%)</TableCell>\r\n            <TableCell align=\"right\">Population</TableCell>\r\n            <TableCell align=\"right\">Residents</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((planets, i) => (\r\n            <TableRow key={i}>\r\n              <TableCell component=\"th\" scope=\"row\">{planets.name}</TableCell>\r\n              <TableCell align=\"right\">{planets.diameter}</TableCell>\r\n              <TableCell align=\"right\">{planets.climate}</TableCell>\r\n              <TableCell align=\"right\">{planets.terrain}</TableCell>\r\n              <TableCell align=\"right\">{planets.surface_water}</TableCell>\r\n              <TableCell align=\"right\"><NumberFormat value={planets.population} thousandSeparator={true} displayType={'text'}/></TableCell>\r\n              <TableCell align=\"right\"><SimpleModal data={planets} /></TableCell>\r\n              <TableCell align=\"right\"><Button variant=\"contained\" color=\"secondary\">Vote</Button></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport BasicTable from './components/table';\r\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [planets, setPlanets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1)\r\n  \r\n  useEffect (() => {\r\n    async function fetchPlanets() {\r\n      let res = await fetch (`https://swapi.dev/api/planets/?format=json&page=${page}`);\r\n      let data = await res.json()\r\n      setPlanets(data.results);\r\n      console.log(planets)\r\n    }\r\n  \r\n    fetchPlanets();\r\n    setLoading(false);\r\n  }, [page]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Star Wars Planets</h1>\r\n        \r\n        <Button className=\"navigationBtn\" variant=\"contained\" color=\"primary\" onClick={() => page === 1 ? page : setPage(page-1)}>\r\n        Previous      \r\n        </Button>\r\n        <Button className=\"navigationBtn\" variant=\"contained\" color=\"primary\" onClick={() => page === 6 ? page : setPage(page+1)}>\r\n        Next      \r\n        </Button>\r\n        <Container>\r\n        {loading ? (\r\n          <Dimmer active inverted>\r\n          <Loader inverted>Loading</Loader>\r\n        </Dimmer>\r\n        ) : (\r\n          <>\r\n          <BasicTable data={planets}/>\r\n          </>\r\n          )}\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}